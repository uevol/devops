"""
Django settings for devops project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=2ke1d#crqio_ic35k$3y0af)70@n^y=rv^8rl&t-^_+y92m^f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'admins',
    'cmdb',
    'dashboard',
    'ops',
    'django_rq',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'devops.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'devops.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',  
        'NAME': 'devops',  
        'USER': 'devops',  
        'PASSWORD': 'devops',  
        'HOST': 'devops',
        'PORT': '3306',
    }
}

# config mongo interface
from pymongo import MongoClient
# For Python 2 and 3 compatibility
try:
    from urllib import quote_plus
except ImportError:
    # For Python 3
    from urllib.parse import quote_plus
MONGO_HOST, MONGO_PORT, MONGO_USER, MONGO_PASS = 'devops', 27017, '', ''
if MONGO_USER and MONGO_PASS:
   MONGO_USER, MONGO_PASS = quote_plus(MONGO_USER), quote_plus(MONGO_PASS)
   mongo = MongoClient('mongodb://%s:%s@%s:%s' % (MONGO_HOST, MONGO_PORT, MONGO_USER, MONGO_PASS))
else:
   mongo = MongoClient(MONGO_HOST, MONGO_PORT)

# config zabbix
from pyzabbix import ZabbixAPI
ZABBIX_SERVER, ZABBIX_PORT, ZABBIX_PATH, ZABBIX_USER, ZABBIX_PASS = 'devops', 80, "/zabbix", "Admin", "zabbix"

# config salt master system
SALTMASTER_IP, SALTMASTER_PORT, SALTMASTER_USER, SALTMASTER_PASSWD = "devops", '22', 'root', 'admin@123'
# config salt_api
SALT_IP, SALT_PORT, SALT_USER, SALT_PASSWD = 'devops', '8080', 'salt_api', 'salt_api'


# config for rq_scheduler
# from redis import Redis
# from rq_scheduler import Scheduler
# scheduler = Scheduler(connection=Redis())

# config for django_rq 
RQ_QUEUES = {
    'default': {
        'HOST': 'localhost',
        'PORT': 6379,
        'DB': 0,
        # 'PASSWORD': 'some-password',
        'DEFAULT_TIMEOUT': 360,
    },
    'high': {
        'HOST': 'localhost',
        'PORT': 6379,
        'DB': 0,
        # 'PASSWORD': 'some-password',
        'DEFAULT_TIMEOUT': 120,
    },
    'low': {
        'HOST': 'localhost',
        'PORT': 6379,
        'DB': 0,
        # 'PASSWORD': 'some-password',
        'DEFAULT_TIMEOUT': 360,
    }
}

import django_rq
# get scheduler for rq_scheduler
scheduler = django_rq.get_scheduler('default')

# config for rq_log
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        "rq_console": {
            "format": "%(asctime)s %(message)s",
            "datefmt": "%H:%M:%S",
        },
    },
    'handlers': {
        "rq_console": {
            "level": "ERROR",
            "class": "logging.handlers.TimedRotatingFileHandler",
            'filename': os.path.join(BASE_DIR, 'logs/rqworker.log'),
            "formatter": "rq_console",
        },
    },
    'loggers': {
        "rq.worker": {
            "handlers": ["rq_console"],
            "level": "DEBUG"
        },
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)
STATIC_ROOT = os.path.join(BASE_DIR, 'collectedstatic')

# upload folder
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')

LOGIN_URL = '/login'
LOGIN_REDIRECT_URL = '/'
